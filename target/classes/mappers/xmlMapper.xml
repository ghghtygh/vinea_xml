<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.vinea.mapper.xmlMapper">
 
 	<resultMap id="artiMap" type="com.vinea.dto.ArtiVO">
 	<!-- xmlMapper.xml -> resultMap(id:artiMap) 논문정보 테이블의 컬럼 -->	
 	
 			<result property="num"					column="ROWNUM"/>
			<result property="uid"					column="UID"/>
			<result property="arti_no"				column="ARTI_NO"/>
			<result property="arti_title"    		column="ARTI_TITLE"/>
			<result property="pub_year"    			column="PUB_YEAR"/>   	
			<result property="pub_date"    			column="PUB_DATE"/>    	
			<result property="volume"    			column="VOLUME"/>    	
			<result property="issue"    			column="ISSUE"/>    	
			<result property="doi"    				column="DOI"/>    		
			<result property="abstr"    			column="ABSTR"/>    	
			<result property="issn"    				column="ISSN"/>   		
			<result property="eissn"    			column="EISSN"/>    	
			<result property="cite_cnt"    			column="CITE_CNT"/>    	
			<result property="jrnl_title"    		column="JRNL_TITLE"/>    
			<result property="sup_cnt"    			column="SUP_CNT"/>    	
			<result property="page_cnt"    			column="PAGE_CNT"/>    	
			<result property="begin_page"    		column="BEGIN_PAGE"/>    
			<result property="end_page"    			column="END_PAGE"/>   	
			<result property="open_yn"    			column="OPEN_YN"/>    	
			<result property="item_id"    			column="ITEM_ID"/>    	
			<result property="item_avail_yn"    	column="ITEM_AVAIL_YN"/>   
			<result property="item_type"    		column="ITEM_TYPE"/>    
			<result property="item_page_cnt"    	column="ITEM_PAGE_CNT"/>   
			<result property="book_page_cnt"    	column="BOOK_PAGE_CNT"/>   
			<result property="book_bind_yn"    		column="BOOK_BIND_YN"/> 
			<result property="book_publ"    		column="BOOK_PUBL"/>   	
			<result property="book_prepay"    		column="BOOK_PREPAY"/>  
			<result property="ctgry_nm"     		column="CTGRY_NM"/>     
			<result property="ctgry_sub_title"    	column="CTGRY_SUB_TITLE"/> 
			<result property="ctgry_subject"    	column="CTGRY_SUBJECT"/>   
			<result property="del_yn"    			column="DEL_YN"/>    	
			<result property="regist_date"    		column="REGIST_DATE"/>    
			<result property="registr_id"    		column="REGISTR_ID"/>    
			<result property="modify_date"    		column="MODIFY_DATE"/>    
			<result property="modify_id"    		column="MODIFY_ID"/>    				
	</resultMap>   

	<resultMap id="authMap" type="com.vinea.dto.AuthVO">
	<!-- xmlMapper.xml -> resultMap(id:authMap) 저자정보 테이블의 컬럼 -->	
	
			<result property="auth_pk"				column="AUTH_PK"/>
			<result property="auth_id"				column="AUTH_ID"/>
			<result property="auth_seq"				column="AUTH_SEQ_NO"/>
			<result property="auth_addr_no"   		column="AUTH_ADDR_NO"/>
			<result property="uid"   				column="UID"/>
			<result property="auth_nm"  		 	column="AUTH_NM"/>
			<result property="auth_full_nm"   		column="AUTH_FULL_NM"/>
			<result property="auth_wos_nm"  		column="AUTH_WOS_NM"/>
			<result property="auth_role"   			column="AUTH_ROLE"/>
			<result property="lead_yn"  		 	column="LEAD_YN"/>
			<result property="corres_yn"  		 	column="CORRES_YN"/>
			<result property="auth_email_addr"  	column="AUTH_EMAIL_ADDR"/>
			<result property="orcid_id" 		  	column="ORCID_ID"/>
			<result property="auth_rid"   			column="AUTH_RID"/>		
	</resultMap> 
	
	<resultMap id="booknoteMap" type="com.vinea.dto.BooknoteVO">
	<!-- xmlMapper.xml -> resultMap(id:booknoteMap) 도서기록정보 테이블의 컬럼 -->	
	
		<result property="book_note_pk"				column="BOOK_NOTE_PK"/>
		<result property="uid"						column="UID"/>
		<result property="note_nm"					column="NOTE_NM"/>		
	</resultMap>
	
	<resultMap id="confMap" type="com.vinea.dto.ConfVO">
	<!-- xmlMapper.xml -> resultMap(id:confMap) 학회정보 테이블의 컬럼 -->	
	
		<result property="conf_pk"					column="CONF_PK"/>
		<result property="conf_id"					column="CONF_ID"/>
		<result property="uid"						column="UID"/>
		<result property="conf_title"				column="CONF_TITLE"/>
		<result property="conf_date"				column="CONF_DATE"/>
		<result property="start_date"				column="START_DATE"/>
		<result property="end_date"					column="END_DAT"/>
		<result property="city"						column="CITY"/>
		<result property="state"					column="STATE"/>
		<result property="country"					column="COUNTRY"/>
		<result property="spon_nm"					column="SPON_NM"/>
	</resultMap>
	
	<resultMap id="dtypeMap" type="com.vinea.dto.DtypeVO">
	<!-- xmlMapper.xml -> resultMap(id:dtypeMap) 문서유형정보 테이블의 컬럼 -->	
	
		<result property="dtype_pk"					column="DTYPE_PK"/>
		<result property="uid"						column="UID"/>
		<result property="dtype_nm"					column="DTYPE_NM"/>	
	</resultMap>
	
	<resultMap id="grntMap" type="com.vinea.dto.GrntVO">
	<!-- xmlMapper.xml -> resultMap(id:grntMap) 보조금 정보 테이블의 컬럼 -->	
	
		<result property="grnt_pk"				column="GRNT_PK"/>
		<result property="uid"					column="UID"/>
		<result property="grnt_gid"				column="GRNT_GID"/>
		<result property="grnt_text"			column="GRNT_TEXT"/>
		<result property="grnt_agcy"			column="GRNT_AGCY"/>		
	</resultMap>
	
	<resultMap id="kwrdMap" type="com.vinea.dto.KwrdVO">
	<!-- xmlMapper.xml -> resultMap(id:kwrdMap) 키워드 정보 테이블의 컬럼 -->	
	
		<result property="kwrd_pk"				column="KWRD_PK"/>	
		<result property="uid"					column="UID"/>
		<result property="kwrd_nm"				column="KWRD_NM"/>
		<result property="kw_plus_yn"			column="KW_PLUS_YN"/>
	</resultMap>
	
	<resultMap id="authOrgnMap" type="com.vinea.dto.OrgnVO">
	<!-- xmlMapper.xml -> resultMap(id:authOrgnMap) 저자 기관정보 테이블의 컬럼 -->	
	
		<result property="auth_orgn_pk"			column="AUTH_ORGN_PK"/>
		<result property="uid"					column="UID"/>
		<result property="orgn_addr_no"			column="ORGN_ADDR_NO"/>
		<result property="orgn_full_nm"			column="ORGN_FULL_NM"/>
		<result property="orgn_nm"			    column="ORGN_NM"/>
		<result property="orgn_pref_nm"			column="ORGN_PREF_NM"/>
		<result property="orgn_sub_nm"			column="ORGN_SUB_NM"/>
		<result property="city"					column="CITY"/>
		<result property="state"				column="STATE"/>
		<result property="country"				column="COUNTRY"/>
		<result property="street"				column="STREET"/>		
	</resultMap>
	
	<resultMap id="publMap" type="com.vinea.dto.PublVO">
	<!-- xmlMapper.xml -> resultMap(id:publMap) 발행기관 정보 테이블의 컬럼 -->	
	
		<result property="publ_pk"				column="PUBL_PK"/>
		<result property="uid"					column="UID"/>
		<result property="publ_addr"			column="PUBL_ADDR"/>
		<result property="publ_full_nm"			column="PUBL_FULL_NM"/>
		<result property="publ_nm"				column="PUBL_NM"/>
		<result property="city"					column="CITY"/>
		<result property="country"				column="COUNTRY"/>
		<result property="state"				column="STATE"/>		
	</resultMap>
	
	<resultMap id="refrMap" type="com.vinea.dto.RefrVO">
	<!-- xmlMapper.xml -> resultMap(id:refrMap) 참고문헌 정보 테이블의 컬럼 -->	
	
		<result property="refr_id"				column="REFR_ID"/>
		<result property="refr_uid"				column="REFR_UID"/>
		<result property="uid"				    column="UID"/>
		<result property="author"				column="AUTHOR"/>
		<result property="pub_year"				column="PUB_YEAR"/>
		<result property="volume"				column="VOLUME"/>
		<result property="issue"				column="ISSUE"/>
		<result property="arti_title"			column="ARTI_TITLE"/>
		<result property="doi"					column="DOI"/>
		<result property="page"					column="PAGE"/>
		<result property="orgn_nm"				column="ORGN_NM"/>
		<result property="jrnl_title"			column="JRNL_TITLE"/>
		<result property="del_yn"				column="DEL_YN"/>
		<result property="regist_date"			column="REGIST_DATE"/>
		<result property="registr_id"			column="REGISTR_ID"/>
		<result property="modify_date"			column="MODIFY_DATE"/>	
		<result property="modify_id"			column="MODIFY_ID"/>		
	</resultMap>      
	
	<resultMap id="xmlFileMap" type="com.vinea.dto.XmlFileVO">
	<!-- xmlMapper.xml -> resultMap(id:xmlFileMap) XML 파일 테이블의 컬럼 -->	
	
		<result property="uid"					column="UID"/>	
		<result property="content"				column="CONTENT"/>	
		<result property="regist_date"			column="REGIST_DATE"/>	
		<result property="registr_id"			column="REGISTR_ID"/>	
		<result property="file_name"			column="FILE_NAME"/>	
		<result property="parse_yn"				column="PARSE_YN"/>	
		<result property="del_yn"				column="DEL_YN"/>	
		<result property="y_cnt"				column="Y_CNT"/>
		<result property="all_cnt"				column="ALL_CNT"/>
	
	</resultMap>
	
	<insert id="insertArti"   parameterType="com.vinea.dto.ArtiVO">
	<!-- 파싱한 논문정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertArti -->
	
		INSERT INTO
			TB_ARTI
		(
			 UID
			,ARTI_NO
			,ARTI_TITLE
			,PUB_YEAR
			,PUB_DATE
			,VOLUME
			,ISSUE
			,DOI
			,ABSTR
			,ISSN
			,EISSN
			,CITE_CNT
			,JRNL_TITLE
			,SUP_CNT
			,PAGE_CNT
			,BEGIN_PAGE
			,END_PAGE
			,OPEN_YN
			,ITEM_ID
			,ITEM_AVAIL_YN
			,ITEM_TYPE
			,ITEM_PAGE_CNT
			,BOOK_PAGE_CNT
			,BOOK_BIND_YN
			,BOOK_PUBL
			,BOOK_PREPAY
			,CTGRY_NM
			,CTGRY_SUB_TITLE
			,CTGRY_SUBJECT
			,DEL_YN
			,REGIST_DATE
			,REGISTR_ID
			,MODIFY_DATE
			,MODIFY_ID
		)   		
		VALUES
		(
			 #{uid}			
			,#{arti_no}     	
			,#{arti_title}
			,#{pub_year}
			,#{pub_date}
			,#{volume}  		
			,#{issue} 		
			,#{doi}   	
			,#{abstr}		
			,#{issn}  		
			,#{eissn} 		
			,#{cite_cnt}   		
			,#{jrnl_title}   	
			,#{sup_cnt}   
			,#{page_cnt}   
			,#{begin_page}   		
			,#{end_page}   		
			,#{open_yn}
			,#{item_id}  	
			,#{item_avail_yn} 
			,#{item_type}  
			,#{item_page_cnt}  
			,#{book_page_cnt}  
			,#{book_bind_yn} 
			,#{book_publ} 
			,#{book_prepay}
			,#{ctgry_nm}
			,#{ctgry_sub_title}
			,#{ctgry_subject}
			,#{del_yn}
			,NOW()
			,#{registr_id}
			,#{modify_date}
			,#{modify_id}
		)
		ON DUPLICATE KEY UPDATE
			REGIST_DATE = NOW()
		
	</insert>
	
	<insert id="insertAuth"   parameterType="com.vinea.dto.AuthVO">
	<!-- 파싱한 저자정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertAuth -->
	
		INSERT IGNORE
	    	INTO TB_AUTH
	    (
	    	 AUTH_PK
			,AUTH_ID
			,AUTH_SEQ
			,AUTH_ADDR_NO
			,UID
			,AUTH_NM
			,AUTH_FULL_NM
			,AUTH_WOS_NM
			,AUTH_ROLE
			,LEAD_YN
			,CORRES_YN
			,AUTH_EMAIL_ADDR
			,ORCID_ID
			,AUTH_RID
		) 		
	    VALUES
	    (
			 #{auth_pk}
			,#{auth_id}
			,#{auth_seq}    
			,#{auth_addr_no}  
			,#{uid}   
			,#{auth_nm} 
			,#{auth_full_nm}  
			,#{auth_wos_nm}   
			,#{auth_role}   
			,#{lead_yn}   
			,#{corres_yn} 
			,#{auth_email_addr} 
			,#{orcid_id}
			,#{auth_rid}
	    )        
	</insert>
	
	<insert id="insertBooknote" parameterType="com.vinea.dto.BooknoteVO">
	<!-- 파싱한 도서기록정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertBooknote -->
	
		INSERT IGNORE
	    	INTO TB_BOOK_NOTE
	    (
			 UID
			,NOTE_NM
	    )  
	    VALUES
	    (
			 #{uid}
			,#{note_nm}
	    )    
	</insert>
	
	<insert id="insertConf" parameterType="com.vinea.dto.ConfVO">
	<!-- 파싱한 학회정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertConf -->
	
		INSERT IGNORE
	    	INTO TB_CONF
	    (
			CONF_ID  
			,UID  
			,CONF_TITLE  
			,CONF_DATE  
			,START_DATE  
			,END_DATE  
			,CITY  
			,STATE  
			,COUNTRY
		    ,SPON_NM
	    )   
	    VALUES
	    (
			 #{conf_id}
			,#{uid}
			,#{conf_title}
			,#{conf_date}
			,#{start_date}
			,#{end_date}
			,#{city}
			,#{state}
			,#{country}
			,#{spon_nm}
	    )     
	</insert> 
	
	<insert id="insertDtype" parameterType="com.vinea.dto.DtypeVO">
	<!-- 파싱한 문서유형정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertDtype -->
	
		INSERT IGNORE
	    	INTO TB_DTYPE
	    (
			 UID
			,DTYPE_NM
			
	    )
	    VALUES
	    (
			 #{uid}
			,#{dtype_nm}
		
	    )
	</insert>
	
	<insert id="insertGrnt" parameterType="com.vinea.dto.GrntVO">
	<!-- 파싱한 보조금정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertGrnt -->
		
		INSERT IGNORE
	    	INTO TB_GRNT
	    (
	    	 UID
			,GRNT_GID
			,GRNT_TEXT
			,GRNT_AGCY
	    )
	    VALUES
	    (
	    	 #{uid}
			,#{grnt_gid}
			,#{grnt_text}
			,#{grnt_agcy}
	    )
	</insert>
	
	<insert id="insertKwrd" parameterType="com.vinea.dto.KwrdVO">
	<!-- 파싱한 키워드정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertKwrd -->
	
		INSERT IGNORE
			INTO TB_KWRD
		(
			 UID
			,KWRD_NM
			,KW_PLUS_YN
		)
		VALUES
		(
			 #{uid}
			,#{kwrd_nm}
			,#{kw_plus_yn}
		
		)
	</insert>
	
	<insert id="insertOrgn" parameterType="com.vinea.dto.OrgnVO">
	<!-- 파싱한 저자기관정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertOrgn -->
	
		INSERT IGNORE
			INTO TB_AUTH_ORGN
		(
			 UID
			,ORGN_ADDR_NO
			,ORGN_FULL_NM
			,ORGN_NM
			,ORGN_PREF_NM
			,ORGN_SUB_NM
			,CITY
			,STATE
			,COUNTRY
	        ,STREET
	     )
	    VALUES
	    (
			 #{uid}
			,#{orgn_addr_no}
			,#{orgn_full_nm}
			,#{orgn_nm}
			,#{orgn_pref_nm}
			,#{orgn_sub_nm}
			,#{city}
			,#{state}
			,#{country}
			,#{street}
	    )     
	</insert>
	
	<insert id="insertPubl" parameterType="com.vinea.dto.PublVO">
	<!-- 파싱한 발행기관정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertPubl -->
	
		INSERT IGNORE
			INTO TB_PUBL
		(
			 UID
			,PUBL_ADDR
			,PUBL_FULL_NM
			,PUBL_NM
			,CITY
			,COUNTRY
			,STATE
		)    
		VALUES
	    (
			 #{uid}
			,#{publ_addr}
			,#{publ_full_nm}
			,#{publ_nm}
			,#{city}
			,#{country}
			,#{state}
	    )
	</insert>
	
	<insert id="insertRefr" parameterType="com.vinea.dto.RefrVO">
	<!-- 파싱한 참고문헌정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertRefr -->
	
		INSERT
	    	INTO TB_REFR
	    (
			 REFR_ID
			,REFR_UID
			,UID
			,AUTHOR
			,PUB_YEAR
			,VOLUME
			,ISSUE
			,ARTI_TITLE
			,DOI
			,PAGE
			,ORGN_NM
			,JRNL_TITLE
			,DEL_YN
			,REGIST_DATE
			,REGISTR_ID
			,MODIFY_DATE
			,MODIFY_ID
	    )   
		VALUES
	    (   
			 #{refr_id}	
			,#{refr_uid}
			,#{uid}
			,#{author}
			,#{pub_year}
			,#{volume}
			,#{issue}
			,#{arti_title}
			,#{doi}
			,#{page}
			,#{orgn_nm}
			,#{jrnl_title}
			,#{del_yn}
			,NOW()
			,#{registr_id}
			,#{modify_date}
		    ,#{modify_id}   
	    )
	    ON DUPLICATE KEY UPDATE
			REGIST_DATE = NOW()
	</insert>
	
	<insert id="insertXmlFile" parameterType="com.vinea.dto.XmlFileVO">
	<!-- 원본 데이터   *path: src/main/resources/mappers/xmlMapper.xml *id: insertXmlFile -->
	
		INSERT IGNORE
			INTO TB_XML_FILE
		(
			 UID
			,CONTENT
			,REGIST_DATE
			,REGISTR_ID
			,FILE_NAME
			,PARSE_YN
			,DEL_YN
		)
		VALUES
		(
			 #{uid}
			,#{content}
			,NOW()
			,"none"
			,#{file_name}
			,'N'
			,'N'
		)
		
	</insert>
	
	<insert id="insertArtiList"   parameterType="java.util.List">
	<!-- 파싱한 논문정보리스트 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertArtiList -->
	
		INSERT INTO
			TB_ARTI
		(
			 UID
			,ARTI_NO
			,ARTI_TITLE
			,PUB_YEAR
			,PUB_DATE
			,VOLUME
			,ISSUE
			,DOI
			,ABSTR
			,ISSN
			,EISSN
			,CITE_CNT
			,JRNL_TITLE
			,SUP_CNT
			,PAGE_CNT
			,BEGIN_PAGE
			,END_PAGE
			,OPEN_YN
			,ITEM_ID
			,ITEM_AVAIL_YN
			,ITEM_TYPE
			,ITEM_PAGE_CNT
			,BOOK_PAGE_CNT
			,BOOK_BIND_YN
			,BOOK_PUBL
			,BOOK_PREPAY
			,CTGRY_NM
			,CTGRY_SUB_TITLE
			,CTGRY_SUBJECT
			,DEL_YN
			,REGIST_DATE
			,REGISTR_ID
			,MODIFY_DATE
			,MODIFY_ID
		)   		
		VALUES	
		<foreach collection="list" item="item" separator=" , ">
		(
			 #{item.uid}			
			,#{item.arti_no}     	
			,#{item.arti_title}
			,#{item.pub_year}
			,#{item.pub_date}
			,#{item.volume}  		
			,#{item.issue} 		
			,#{item.doi}   	
			,#{item.abstr}		
			,#{item.issn}  		
			,#{item.eissn} 		
			,#{item.cite_cnt}   		
			,#{item.jrnl_title}   	
			,#{item.sup_cnt}   
			,#{item.page_cnt}   
			,#{item.begin_page}   		
			,#{item.end_page}   		
			,#{item.open_yn}
			,#{item.item_id}  	
			,#{item.item_avail_yn} 
			,#{item.item_type}  
			,#{item.item_page_cnt}  
			,#{item.book_page_cnt}  
			,#{item.book_bind_yn} 
			,#{item.book_publ} 
			,#{item.book_prepay}
			,#{item.ctgry_nm}
			,#{item.ctgry_sub_title}
			,#{item.ctgry_subject}
			,#{item.del_yn}
			,NOW()
			,#{item.registr_id}
			,#{item.modify_date}
			,#{item.modify_id}		
		
		)
		</foreach>
		ON DUPLICATE KEY UPDATE
			REGIST_DATE = NOW()
			
	</insert>
	<insert id="insertAuthList" parameterType="java.util.List">
		INSERT IGNORE
	    	INTO TB_AUTH
	    (
			 AUTH_ID
			,AUTH_SEQ
			,AUTH_ADDR_NO
			,UID
			,AUTH_NM
			,AUTH_FULL_NM
			,AUTH_WOS_NM
			,AUTH_ROLE
			,LEAD_YN
			,CORRES_YN
			,AUTH_EMAIL_ADDR
			,ORCID_ID
			,AUTH_RID
		) 		
	    VALUES
	    <foreach collection="list" item="item" separator=" , ">
	    (
			 #{item.auth_id}
			,#{item.auth_seq}    
			,#{item.auth_addr_no}  
			,#{item.uid}   
			,#{item.auth_nm} 
			,#{item.auth_full_nm}  
			,#{item.auth_wos_nm}   
			,#{item.auth_role}   
			,#{item.lead_yn}   
			,#{item.corres_yn} 
			,#{item.auth_email_addr} 
			,#{item.orcid_id}
			,#{item.auth_rid}
	    )
	    </foreach>
	</insert>
	
	<insert id="insertBooknoteList" parameterType="java.util.List">
	<!-- 파싱한 도서기록정보리스트 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertBooknoteList -->
	
		INSERT IGNORE
	    	INTO TB_BOOK_NOTE
	    (
			 UID
			,NOTE_NM
	    )
	    VALUES
		<foreach collection="list" item="item" separator=" , ">
		(
			 #{item.uid}
			,#{item.note_nm}
		)
		</foreach>
	</insert>
	
	<insert id="insertConfList" parameterType="java.util.List">
	<!-- 파싱한 학회정보리스트 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertConfList -->
		
		INSERT IGNORE
	    	INTO TB_CONF
	    (
			 CONF_ID  
			,UID  
			,CONF_TITLE  
			,CONF_DATE  
			,START_DATE  
			,END_DATE  
			,CITY  
			,STATE  
			,COUNTRY
		    ,SPON_NM
	    )
	    VALUES
		<foreach collection="list" item="item" separator=" , ">
		(
			 #{item.conf_id}
			,#{item.uid}
			,#{item.conf_title}
			,#{item.conf_date}
			,#{item.start_date}
			,#{item.end_date}
			,#{item.city}
			,#{item.state}
			,#{item.country}
			,#{item.spon_nm}		
		)
		</foreach>
	</insert>
	
	<insert id="insertDtypeList" parameterType="java.util.List">
	<!-- 파싱한 문서유형정보리스트 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertDtypeList -->
		
		INSERT IGNORE
	    	INTO TB_DTYPE
	    (
			 UID
			,DTYPE_NM
			
	    )
	    VALUES
		<foreach collection="list" item="item" separator=" , ">
		(
			 #{item.uid}
			,#{item.dtype_nm}
		)
		</foreach>
	</insert>
	
	<insert id="insertGrntList" parameterType="java.util.List">
	<!-- 파싱한 보조금정보리스트 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertGrntList -->
	
		INSERT IGNORE
	    	INTO TB_GRNT
	    (
	    	 UID
			,GRNT_GID
			,GRNT_TEXT
			,GRNT_AGCY
	    )
	    VALUES
		<foreach collection="list" item="item" separator=" , ">
		(
			 #{item.uid}
			,#{item.grnt_gid}
			,#{item.grnt_text}
			,#{item.grnt_agcy}
		)
		</foreach>
	</insert>
	
	<insert id="insertKwrdList" parameterType="java.util.List">
	<!-- 파싱한 키워드정보리스트 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertKwrdList -->
	
		INSERT IGNORE
			INTO TB_KWRD
		(
			 UID
			,KWRD_NM
			,KW_PLUS_YN
		)
		VALUES
		<foreach collection="list" item="item" separator=" , ">
		(
			 #{item.uid}
			,#{item.kwrd_nm}
			,#{item.kw_plus_yn}
		)
		</foreach>
	</insert>
	
	<insert id="insertOrgnList" parameterType="java.util.List">
	<!-- 파싱한 저자기관정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertOrgnList -->
	
		INSERT IGNORE
			INTO TB_AUTH_ORGN
		(
			 UID
			,ORGN_ADDR_NO
			,ORGN_FULL_NM
			,ORGN_NM
			,ORGN_PREF_NM
			,ORGN_SUB_NM
			,CITY
			,STATE
			,COUNTRY
	        ,STREET
	     )
	    VALUES
		<foreach collection="list" item="item" separator=" , ">
		(
			 #{item.uid}
			,#{item.orgn_addr_no}
			,#{item.orgn_full_nm}
			,#{item.orgn_nm}
			,#{item.orgn_pref_nm}
			,#{item.orgn_sub_nm}
			,#{item.city}
			,#{item.state}
			,#{item.country}
			,#{item.street}
		)
		</foreach>
	</insert>
	
	<insert id="insertPublList" parameterType="java.util.List">
	<!-- 파싱한 발행기관정보 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertPublList -->
		
		INSERT IGNORE
			INTO TB_PUBL
		(
			 UID
			,PUBL_ADDR
			,PUBL_FULL_NM
			,PUBL_NM
			,CITY
			,COUNTRY
			,STATE
		)    
		VALUES
		<foreach collection="list" item="item" separator=" , ">
		(
			 #{item.uid}
			,#{item.publ_addr}
			,#{item.publ_full_nm}
			,#{item.publ_nm}
			,#{item.city}
			,#{item.country}
			,#{item.state}
		)
		</foreach>
	</insert>
	
	<insert id="insertRefrList" parameterType="java.util.List">
	<!-- 파싱한 참고문헌정보리스트 DB에 저장 *path: src/main/resources/mappers/xmlMapper.xml *id: insertRefrList -->
	
		INSERT
	    	INTO TB_REFR
	    (
			 REFR_ID
			,REFR_UID
			,UID
			,AUTHOR
			,PUB_YEAR
			,VOLUME
			,ISSUE
			,ARTI_TITLE
			,DOI
			,PAGE
			,ORGN_NM
			,JRNL_TITLE
			,DEL_YN
			,REGIST_DATE
			,REGISTR_ID
			,MODIFY_DATE
			,MODIFY_ID
	    )   
		VALUES
		<foreach collection="list" item="item" separator=" , ">
		(
			 #{item.refr_id}	
			,#{item.refr_uid}
			,#{item.uid}
			,#{item.author}
			,#{item.pub_year}
			,#{item.volume}
			,#{item.issue}
			,#{item.arti_title}
			,#{item.doi}
			,#{item.page}
			,#{item.orgn_nm}
			,#{item.jrnl_title}
			,#{item.del_yn}
			,NOW()
			,#{item.registr_id}
			,#{item.modify_date}
		    ,#{item.modify_id}
		)
		</foreach>
		ON DUPLICATE KEY UPDATE
			REGIST_DATE = NOW()
	</insert>
	
	<select id="selectXmlList" parameterType="hashmap" resultMap="artiMap">
	<!-- 요청 페이지에 따른 파싱된 논문 목록 조회  *path: src/main/resources/mappers/xmlMapper.xml *id: selectXmlList -->
		
		SELECT
			 
			@ROWNUM:=@ROWNUM+1	AS ROWNUM
			,TB_ARTI.UID		AS UID
			,ARTI_NO
			,ARTI_TITLE
			,PUB_DATE
			,JRNL_TITLE
			,VOLUME
			,ISSUE
			,PUB_YEAR
			,BEGIN_PAGE
			,END_PAGE
			,PAGE_CNT
			
			FROM (SELECT @ROWNUM:=#{start_index}) R
			
			,(
				SELECT TB_ARTI.UID
		<include refid="search"></include>
		<include refid="sort"></include>
		<!-- 정렬 처리 -->
		
				LIMIT
					 #{start_index}
					,#{page_size}
					
			) C
			INNER JOIN TB_ARTI
			ON C.UID = TB_ARTI.UID
	</select>
	
	<select id="countXml" parameterType="hashMap" resultType="java.lang.Integer">
	<!-- 논문 건수 카운팅  *path: src/main/resources/mappers/xmlMapper.xml *id: countXml -->
	
		<choose>
			<when test='search!=null and search!=""'>
			
				SELECT
					COUNT(*)
				FROM
				(
					SELECT
						TB_ARTI.UID	AS UID
					
					<include refid="search"></include>
				) C
			</when>
			<otherwise>
				SELECT
					TB_CNT
				FROM
					CNT_STAT
				WHERE
					TB_NM = 'TB_ARTI'
			</otherwise>
		</choose>
		
	</select>
	
	
	
	<sql id="search">
	<!-- 검색하기 -->
		<choose>
			<when test='search!=null and search!=""'>
			<!-- 검색어 존재 -->
				<choose>
						<when test='search_option.equals("1")'>
						<!-- search_option "1" : 제목 -->
							FROM
								<!--  TB_ARTI -->
								(SELECT * FROM TB_ARTI LIMIT 10000) TB_ARTI
								
							WHERE
							<foreach collection="search_list" item="search" open="(" close=")" separator="or">
								ARTI_TITLE LIKE CONCAT('%',#{search},'%')
							</foreach>
						</when>
						<when test='search_option.equals("2")'>
						<!-- search_option "2" : 저자 -->
							FROM 
								(SELECT * FROM TB_ARTI LIMIT 10000) TB_ARTI
							INNER JOIN
								TB_AUTH AS B
							ON
								TB_ARTI.UID = B.UID
							WHERE
							<foreach collection="search_list" item="search" open="(" close=")" separator="or">
								B.AUTH_FULL_NM
							LIKE
								CONCAT('%',#{search},'%')
							</foreach>
						</when>
						<when test='search_option.equals("3")'>
						<!-- search_option "3" : 키워드 -->
							FROM 
								(SELECT * FROM TB_ARTI LIMIT 10000) TB_ARTI
							INNER JOIN
								TB_KWRD AS B
							ON
								TB_ARTI.UID = B.UID
							WHERE
							<foreach collection="search_list" item="search" open="(" close=")" separator="or">
								B.KWRD_NM
							LIKE
								CONCAT('%',#{search},'%')
							</foreach>
						</when>
				</choose>
			</when>
			<otherwise>
			<!-- 검색어 없음 -->
			FROM
				TB_ARTI
			</otherwise>
		</choose>
	</sql>
	
	<sql id="sort">
	<!-- 정렬하기 -->
		<choose>
			<when test='sort_option.equals("1")'>
			<!-- UID -->
				<!-- USE INDEX(iii) -->
				ORDER BY
				TB_ARTI.UID
				ASC
			</when>
			<when test='sort_option.equals("2")'>
			<!-- 발행일 -->
				ORDER BY
				TB_ARTI.PUB_DATE
				ASC
			</when>
			<when test='sort_option.equals("3")'>
			<!-- 제목 -->
			</when>
		</choose>
		
	</sql>
	
	<select id="selectOneXml" parameterType="java.lang.String" resultMap="artiMap">
	<!-- 논문 상세페이지에 들어갈 정보  *path: src/main/resources/mappers/xmlMapper.xml *id: selectOneXml -->
		
		SELECT		
			 UID
			,ARTI_TITLE
			,JRNL_TITLE
			,VOLUME
			,ISSUE
			,PUB_YEAR
			,BEGIN_PAGE
			,END_PAGE
			,DOI
			,PAGE_CNT
		    ,ABSTR
		    ,CITE_CNT
		    ,CTGRY_NM
		    ,CTGRY_SUB_TITLE
		    ,CTGRY_SUBJECT
		FROM
			TB_ARTI		
		WHERE
			UID = #{UID}

	</select>
	
	<select id ="selectKwrdList" parameterType="java.lang.String" resultMap="kwrdMap">
	<!-- 논문 상세페이지에서 조회되는 논문키워드  *path: src/main/resources/mappers/xmlMapper.xml *id: selectKwrdList -->
		
		SELECT DISTINCT
			KWRD_NM
		FROM
			TB_KWRD		
		WHERE
			UID = #{uid}
			
	</select>
	
	<select id ="selectRefrList" parameterType="java.lang.String" resultMap="refrMap">
	<!-- 논문 상세페이지에서 조회되는 참고문헌 목록  *path: src/main/resources/mappers/xmlMapper.xml *id: selectRefrList -->
	
		SELECT DISTINCT
			 AUTHOR
			,ARTI_TITLE
			,PUB_YEAR
			,VOLUME
			,ISSUE
			,DOI
			,PAGE
			,ORGN_NM
		FROM
			TB_REFR			
		WHERE
			UID = #{uid}
		ORDER BY
			REFR_ID
		ASC
			
	</select>	
	
	<select id ="selectAuthList" parameterType="java.lang.String" resultMap="authMap">
	<!-- 논문 상세페이지에서 조회되는 저자정보  *path: src/main/resources/mappers/xmlMapper.xml *id: selectAuthList -->
	
		SELECT DISTINCT
			 AUTH_FULL_NM 
			,LEAD_YN
			,CORRES_YN
		FROM
			TB_AUTH			
		WHERE
			UID = #{uid}
		ORDER BY
			AUTH_SEQ
		ASC
		
	</select>	
	
   <select id ="selectOrgnList" parameterType="java.lang.String" resultMap="authOrgnMap">
   <!-- 논문 상세페이지에서 조회되는 기관정보  *path: src/main/resources/mappers/xmlMapper.xml *id: selectOrgnList -->
     
      SELECT DISTINCT
          ORGN_ADDR_NO
         ,ORGN_FULL_NM
         ,ORGN_NM
      FROM
         TB_AUTH_ORGN         
      WHERE
         UID = #{uid}   
   </select>   
   
   <select id ="selectPublList" parameterType="java.lang.String" resultMap="publMap">
   <!-- 논문 상세페이지에서 조회되는 발행기관정보  *path: src/main/resources/mappers/xmlMapper.xml *id: selectPublList -->
     
      SELECT DISTINCT
          PUBL_NM
         ,PUBL_FULL_NM
         ,PUBL_ADDR
      FROM
         TB_PUBL         
      WHERE
         UID = #{uid}   
   </select>   

	<select id="selectOneXmlFile" parameterType="java.lang.String" resultMap="xmlFileMap">
	<!-- 입력 파일명에 따른 파싱안된 XML<REC>태그내용  *path: src/main/resources/mappers/xmlMapper.xml *id: selectOneXmlFile -->	
	
		SELECT
			 UID
			,CONTENT
		FROM
			TB_XML_FILE
		WHERE
			FILE_NAME = #{file_name}
		AND
			(PARSE_YN = 'N' OR PARSE_YN IS NULL)
		AND
			(ERROR_YN != 'Y' OR ERROR_YN IS NULL)
			
		LIMIT 1
			
	</select>
	
	<select id="selectXmlFileList" parameterType="hashMap" resultMap="xmlFileMap">
	<!-- 입력 파일명에 따른 파싱안된 XML<REC>태그내용 리스트  *path: src/main/resources/mappers/xmlMapper.xml *id: selectOneXmlFile -->
	
		SELECT
			 UID
			,CONTENT
		FROM
			TB_XML_FILE
		WHERE
			FILE_NAME = #{file_name}
		AND
			(PARSE_YN = 'N' OR PARSE_YN IS NULL)
		AND
			(ERROR_YN != 'Y' OR ERROR_YN IS NULL)
		
		LIMIT #{file_cnt}
		
	</select>
	
	<select id="selectXmlFileCount" resultMap="xmlFileMap">
	<!-- XML 파싱 현황 목록  *path: src/main/resources/mappers/xmlMapper.xml *id: selectXmlFileList -->
	
		SELECT
			 FILE_NAME
			,Y_CNT
			,ALL_CNT
		FROM
			FILE_STAT
			
	</select>
	
	
	
	<select id="selectParseYN" resultMap="xmlFileMap">
	<!-- XML 파싱 완료 현황  *path: src/main/resources/mappers/xmlMapper.xml *id: selectParseYN -->
	
		SELECT
			 FILE_NAME
			,COUNT(*) AS Y_CNT
		FROM
			TB_XML_FILE
		WHERE
			PARSE_YN = 'Y'
		GROUP BY
			FILE_NAME
	
	</select>
	
	<update id="updateParseYN" parameterType="java.lang.String">
	<!-- 파싱 완료 표기  *path: src/main/resources/mappers/xmlMapper.xml *id: updateParseYN -->
	
		UPDATE
			TB_XML_FILE
		SET
			PARSE_YN = 'Y'
		WHERE
			UID = #{uid}
	
	</update>
	
	<update id="updateErrorYN" parameterType="java.lang.String">
	<!-- 에러 파일 표기 *path: src/main/resources/mappers/xmlMapper.xml *id: updateErrorYN -->
		
		UPDATE
			TB_XML_FILE
		SET
			ERROR_YN = 'Y'
		WHERE
			UID = #{uid}
	
	</update>
	
	<select id="getKwrdCnt" resultType="com.vinea.dto.CtgrKwrdVO">
			SELECT
				CTGR_NM
			   ,SUBJ_NM
			   ,KWRD_NM
			   ,KWRD_CNT
			   ,PUB_YEAR
			FROM CTGR_KWRD_STAT 
	</select>
	
	<select id="getYearCnt" resultType="com.vinea.dto.YearVO">
			SELECT
				 PUB_YEAR
				,ARTI_CNT
				,BOOK_CNT
				,JRNL_CNT
				,REFR_CNT
			FROM YEAR_STAT 
	</select>
	

 </mapper>
